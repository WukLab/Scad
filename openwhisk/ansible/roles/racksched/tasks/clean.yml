#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Remove racksched containers.

- name: get racksched name and index
  set_fact:
    racksched_name: "{{ name_prefix ~ ((racksched_index_base | int) + host_group.index(inventory_hostname)) }}"
    racksched_index: "{{ (racksched_index_base | int) + host_group.index(inventory_hostname) }}"

- name: remove racksched
  docker_container:
    name: "{{ racksched_name }}"
    image: "{{ docker_registry }}{{ docker.image.prefix }}/racksched:{{ docker.image.tag }}"
    state: absent
    stop_timeout: 60
    timeout: 120
  ignore_errors: True

# In case the racksched could not clean up completely in time.
- name: pause/resume at runc-level to restore docker consistency
  shell: |
        DOCKER_PAUSED=$(docker ps --filter status=paused --filter name=wsk{{ racksched_index }} -q --no-trunc)
        for C in $DOCKER_PAUSED; do docker-runc --root {{ racksched.docker.runcdir }} pause $C; done
        DOCKER_RUNNING=$(docker ps --filter status=running --filter name=wsk{{ racksched_index }} -q --no-trunc)
        for C2 in $DOCKER_RUNNING; do docker-runc --root {{ racksched.docker.runcdir }} resume $C2; done
        TOTAL=$(($(echo $DOCKER_PAUSED | wc -w)+$(echo $DOCKER_RUNNING | wc -w)))
        echo "Handled $TOTAL remaining actions."
  register: runc_output
  ignore_errors: True
  become: "{{ racksched.docker.become }}"

- debug: msg="{{ runc_output.stdout }}"

- name: unpause remaining actions
  shell: "docker unpause $(docker ps -aq --filter status=paused --filter name=wsk{{ racksched_index }})"
  failed_when: False

- name: remove remaining actions
  shell: "docker rm -f $(docker ps -aq --filter name=wsk{{ racksched_index }})"
  failed_when: False

- name: remove racksched log directory
  file:
    path: "{{ whisk_logs_dir }}/{{ racksched_name }}"
    state: absent
  become: "{{ logs.dir.become }}"

- name: remove racksched conf directory
  file:
    path: "{{ racksched.confdir }}/{{ racksched_name }}"
    state: absent
  become: "{{ racksched.dir.become }}"

# Workaround for orphaned ifstate.veth* files on Ubuntu 14.04
# See https://github.com/moby/moby/issues/22513
# Remove inactive files older than 60 minutes
- name: "Clean orphaned ifstate.veth* files on Ubuntu 14.04"
  shell: |
    ACTIVE_VETH_IFACES=$(ip -oneline link show | grep --only-matching --extended-regexp 'veth[0-9a-f]+' | tr '\n' '|' | sed -e 's/.$//')
    EXCLUDE_REGEX=$(if [ -z ${ACTIVE_VETH_IFACES} ]; then echo 'No active veth interfaces found' >&2; else printf '( -not -regex  /run/network/ifstate\.(%s) ) -and ' ${ACTIVE_VETH_IFACES}; fi)
    find /run/network -regextype posix-egrep ${EXCLUDE_REGEX} -name 'ifstate.veth*' -and -mmin +60 -delete
  become: True
  ignore_errors: True
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '14.04'
